#!/bin/bash
# Run with `sudo -E ./scripts/deploy` to preserve environment variables
set -e
name=$1

if [ $# -eq 0 ]; then
    hash=$(git rev-parse HEAD)
    shorthash=${hash:0:8}
    timestamp=$(date +%s)
    name="$shorthash-$timestamp"
fi

echo "Building client..."
pushd client
gulp build --production
popd

echo "Building server..."
pushd server
docker buildx build --platform linux/amd64 -f=prod.Dockerfile --tag=game-galgagame  --output type=docker,dest=../.images/game-galgagame .
popd

echo "Provisioning droplet '$name'..."
droplet_info=$(doctl compute droplet create "$name" \
  --region "sfo2" \
  --image "ubuntu-22-04-x64" \
  --size "s-1vcpu-2gb" \
  --ssh-keys "46507233" \
  --tag-names "ring-of-worlds" \
  --format PublicIPv4 \
  --wait \
  --no-header)

IP=$(echo "$droplet_info" | head -n1 | awk '{print $1}')
echo "Provisioned droplet at $IP"

echo "Installing Docker on remote..."
until ssh -o StrictHostKeyChecking=no -o ConnectTimeout=5 root@$IP "echo SSH ready" 2>/dev/null; do
  echo "Waiting for SSH..."
  sleep 5
done

ssh root@$IP << 'EOF'
  echo "Installing Docker..."
  curl -fsSL https://get.docker.com | sh

  echo "Installing docker-compose-plugin..."
  apt-get update
  apt-get install -y docker-compose-plugin
EOF

echo "Creating Docker context..."
CONTEXT_NAME="do-$name"
docker context create "$CONTEXT_NAME" --docker "host=ssh://root@$IP"
docker context use "$CONTEXT_NAME"

echo "Loading Docker image on server..."
scp .images/game-galgagame root@$IP:/home/game-galgagame
ssh root@$IP 'docker load -i /home/game-galgagame'

echo "Running docker compose"
docker compose -f docker-compose.prod.yml build
docker compose -f docker-compose.prod.yml up -d

echo "Notifying users..."
./scripts/systemMessage "ðŸ”” Server restarting for update, you may lose connection ðŸ””" || true

echo "Flipping floating IP..."
python3 scripts/flip.py "$name"

echo "Purging other droplets"
python3 scripts/purgeOtherDroplets.py "$name"

echo "SUCCESS!"
