user  nginx;
worker_processes  1;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;

    # Compression

    # Enable Gzip compressed.
    gzip on;

    # Enable compression both for HTTP/1.0 and HTTP/1.1.
    gzip_http_version  1.1;

    # Compression level (1-9).
    # 5 is a perfect compromise between size and cpu usage, offering about
    # 75% reduction for most ascii files (almost identical to level 9).
    gzip_comp_level    5;

    # Don't compress anything that's already small and unlikely to shrink much
    # if at all (the default is 20 bytes, which is bad as that usually leads to
    # larger files after gzipping).
    gzip_min_length    256;

    # Compress data even for clients that are connecting to us via proxies,
    # identified by the "Via" header (required for CloudFront).
    gzip_proxied       any;

    # Tell proxies to cache both the gzipped and regular version of a resource
    # whenever the client's Accept-Encoding capabilities header varies;
    # Avoids the issue where a non-gzip capable client (which is extremely rare
    # today) would display gibberish if their proxy gave them the gzipped version.
    gzip_vary          on;

    # Compress all output labeled with one of the following MIME-types.
    gzip_types
      application/atom+xml
      application/javascript
      application/json
      application/rss+xml
      application/vnd.ms-fontobject
      application/x-font-ttf
      application/x-web-app-manifest+json
      application/xhtml+xml
      application/xml
      font/opentype
      image/svg+xml
      image/x-icon
      text/css
      text/plain
      text/x-component;
    # text/html is always compressed by HttpGzipModule

    # include /etc/nginx/conf.d/*.conf;

    server {
        listen        80;
        server_name   ringofworlds.com www.ringofworlds.com localhost;
        return        301 https://www.galgagame.com$request_uri;
    }

    server {
        listen              443 ssl;
        server_name         ringofworlds.com www.ringofworlds.com;
        ssl_certificate     /etc/ssl/www.ringofworlds.com.ca-bundle;
        ssl_certificate_key /etc/ssl/www.ringofworlds.com.key;
        return              301 https://www.galgagame.com$request_uri;
    }

    server {
        listen        80;
        server_name   galgagame.com www.galgagame.com localhost;
        return        301 https://www.galgagame.com$request_uri;
    }


    server {
        listen              443 ssl;
        server_name         www.galgagame.com localhost;
        ssl_certificate     /etc/ssl/www.galgagame.com.ca-bundle;
        ssl_certificate_key /etc/ssl/www.galgagame.com.key;

        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

        index /index.html;
        root  /usr/share/nginx/html/;

        location /auth {
            proxy_pass http://game:9160;
        }

        location /game/ {
            access_log off;
            proxy_pass http://game:9160;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header Host $host;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }

        location = / {}

        location ~ ^/(login|signup|feedback)$ {
          alias /usr/share/nginx/html/index.html;
          default_type text/html;
        }

        location ~ ^/(play/(tutorial|computer|quickplay|daily|(custom(/?[a-zA-Z]*))))$ {
          alias /usr/share/nginx/html/index.html;
          default_type text/html;
        }

        location ~ ^/spec/([a-zA-Z])+$ {
          alias /usr/share/nginx/html/index.html;
          default_type text/html;
        }

        location ~ ^/replay/[0-9]+$ {
          alias /usr/share/nginx/html/index.html;
          default_type text/html;
        }

        location / {
            try_files $uri $uri/ 404;
        }
    }
}
